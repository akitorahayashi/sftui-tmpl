name: Run Tests

on:
  workflow_call:

jobs:
  unit-test:
    runs-on: macos-latest
    env:
      MINT_PATH: ${{ github.workspace }}/.mint
    outputs:
      result: ${{ steps.unit_tests.outcome }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache Mint packages
        uses: actions/cache@v4
        id: cache-mint-packages
        with:
          path: ${{ github.workspace }}/.mint
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: |
            ${{ runner.os }}-mint-

      - name: Install Mint
        run: brew install mint

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Generate Xcode Project
        run: mint run xcodegen generate

      - name: Make find-simulator script executable
        run: chmod +x .github/scripts/find-simulator.sh

      - name: Select Simulator
        id: select_simulator
        run: |
          SIMULATOR_ID=$(./.github/scripts/find-simulator.sh)
          echo "シミュレータ ID ($SIMULATOR_ID) が選択されました"
          echo "simulator_id=$SIMULATOR_ID" >> "$GITHUB_OUTPUT"

      - name: Run Unit Tests
        id: unit_tests
        run: |
          set -o pipefail
          echo "シミュレータ ID (${{ steps.select_simulator.outputs.simulator_id }}) を使用してユニットテストを実行します"
          xcodebuild test \
            -project "TemplateApp.xcodeproj" \
            -scheme "TemplateAppTests" \
            -destination "platform=iOS Simulator,id=${{ steps.select_simulator.outputs.simulator_id }}" \
            -enableCodeCoverage NO \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            | xcbeautify

  ui-test:
    runs-on: macos-latest
    env:
      MINT_PATH: ${{ github.workspace }}/.mint
    outputs:
      result: ${{ steps.ui_tests.outcome }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache Mint packages
        uses: actions/cache@v4
        id: cache-mint-packages
        with:
          path: ${{ github.workspace }}/.mint
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: |
            ${{ runner.os }}-mint-

      - name: Install Mint
        run: brew install mint

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Generate Xcode Project
        run: mint run xcodegen generate

      - name: Make find-simulator script executable
        run: chmod +x .github/scripts/find-simulator.sh

      - name: Select Simulator
        id: select_simulator
        run: |
          SIMULATOR_ID=$(./.github/scripts/find-simulator.sh)
          echo "シミュレータ ID ($SIMULATOR_ID) が選択されました"
          echo "simulator_id=$SIMULATOR_ID" >> "$GITHUB_OUTPUT"

      - name: Run UI Tests
        id: ui_tests
        run: |
          set -o pipefail
          echo "シミュレータ ID (${{ steps.select_simulator.outputs.simulator_id }}) を使用して UI テストを実行します"
          xcodebuild test \
            -project "TemplateApp.xcodeproj" \
            -scheme "TemplateAppUITests" \
            -destination "platform=iOS Simulator,id=${{ steps.select_simulator.outputs.simulator_id }}" \
            -enableCodeCoverage NO \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            | xcbeautify
